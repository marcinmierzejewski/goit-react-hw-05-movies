{"version":3,"file":"static/js/544.2b318b74.chunk.js","mappings":"oSACMA,EAAU,mCAEHC,EAAW,mCAAG,+GAEAC,IAAAA,IAAA,kEACsCF,IAHtC,cAEjBG,EAFiB,OAKjBC,EAAeD,EAASE,KAAKC,QALZ,kBAMhBF,GANgB,gCAQvBG,QAAQC,IAAR,MARuB,yDAAH,qDAYXC,EAAc,mCAAG,WAAMC,GAAN,kGAEHR,IAAAA,IAAA,6CACiBQ,EADjB,oBACoCV,IAHjC,cAEpBG,EAFoB,OAKpBC,EAAeD,EAASE,KALJ,kBAMnBD,GANmB,gCAQ1BG,QAAQC,IAAR,MAR0B,yDAAH,sDAYdG,EAAa,mCAAG,WAAOD,EAASE,GAAhB,kGAEFV,IAAAA,IAAA,6CACiBQ,EADjB,YAC4BE,EAD5B,oBAC6CZ,IAH3C,cAEnBG,EAFmB,OAKnBC,EAAeD,EAASE,KALL,kBAMlBD,GANkB,gCAQzBG,QAAQC,IAAR,MARyB,yDAAH,wDAYbK,EAAkB,mCAAG,WAAMC,GAAN,gGAEPZ,IAAAA,IAAA,4DACgCF,EADhC,kBACiDc,EADjD,gCAFO,cAExBX,EAFwB,yBAKvBA,EAASE,KAAKC,SALS,gCAO9BC,QAAQC,IAAR,MAP8B,yDAAH,qD,qJCrClBO,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3B,OACE,+BACc,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaC,QAAS,GACrB,wBACGD,EAAYE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,0CAAgBD,MAChB,uBAAIC,MAFGF,EADM,OAQnB,sEAIP,ECKD,EAnBgB,WACd,OAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAON,EAAP,KAAoBO,EAApB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAUR,OARAe,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,qGACCf,EAAAA,EAAAA,IAAcD,EAAS,WADxB,OACfiB,EADe,OAErBJ,EAAeI,GAFM,2CAAH,qDAIpBD,GACD,GAAE,CAAChB,KAGF,0BACI,SAACK,EAAD,CAAYC,YAAaA,EAAYV,WAG5C,C","sources":["api/fetchMovies.js","components/ReviewList/ReviewList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '13376ece24dd3764203e2484d15e71b5';\n\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieAdd = async (movieId, param) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/${param}?api_key=${API_KEY}`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import PropTypes from 'prop-types';\n\nexport const ReviewList = ({ movieReview }) => {\n  return (\n    <>\n      {movieReview?.length > 0 ? (\n        <ul>\n          {movieReview.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>{`Author: ${author}`}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p> We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nReviewList.propTypes = {\n  movieById: PropTypes.object,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieAdd } from \"api/fetchMovies\";\nimport { ReviewList } from '../../components/ReviewList/ReviewList';\n\nconst Reviews = () => {\n  const [movieReview, setMovieReview] = useState([])\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReview = async () => {\n      const reviews = await fetchMovieAdd(movieId, 'reviews');\n      setMovieReview(reviews);\n    }\n    getMovieReview();\n  }, [movieId]);\n\n  return (\n    <div>\n        <ReviewList movieReview={movieReview.results}/>      \n    </div>\n  );\n};\n\nexport default Reviews"],"names":["API_KEY","fetchMovies","axios","response","responseData","data","results","console","log","fetchMovieById","movieId","fetchMovieAdd","param","fetchMoviesByQuery","query","ReviewList","movieReview","length","map","id","author","content","useState","setMovieReview","useParams","useEffect","getMovieReview","reviews"],"sourceRoot":""}